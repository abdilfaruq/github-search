{"ast":null,"code":"var _jsxFileName = \"D:\\\\Noticed\\\\GitHub repositories explorer\\\\github-search\\\\src\\\\pages\\\\HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport Button from '@mui/material/Button';\nimport SearchBar from '../components/SearchBar';\nimport UserList from '../components/UserList';\nimport { searchUsers } from '../services/githubApi';\nimport { useQuery } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [submittedQuery, setSubmittedQuery] = useState('');\n\n  // Query untuk mencari user\n  const {\n    data: users = [],\n    isLoading,\n    error,\n    refetch\n  } = useQuery({\n    queryKey: ['searchUsers', submittedQuery],\n    queryFn: () => searchUsers(submittedQuery),\n    enabled: false,\n    // non-aktif otomatis, manual refetch\n    staleTime: 1000 * 60 * 5\n  });\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n    setSubmittedQuery(searchQuery.trim());\n    await refetch();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      paddingY: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"GitHub User Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      onQueryChange: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSearch,\n      fullWidth: true,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n      sx: {\n        display: 'block',\n        margin: '20px auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), users.length > 0 && /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"qjWs6lrjbCH0BsXDE9Di1Z8uAts=\", false, function () {\n  return [useQuery];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","Container","Typography","CircularProgress","Alert","Button","SearchBar","UserList","searchUsers","useQuery","jsxDEV","_jsxDEV","HomePage","_s","searchQuery","setSearchQuery","submittedQuery","setSubmittedQuery","data","users","isLoading","error","refetch","queryKey","queryFn","enabled","staleTime","handleSearch","trim","maxWidth","sx","paddingY","children","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onQueryChange","onClick","fullWidth","display","margin","severity","message","length","_c","$RefreshReg$"],"sources":["D:/Noticed/GitHub repositories explorer/github-search/src/pages/HomePage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Alert from '@mui/material/Alert';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport SearchBar from '../components/SearchBar';\r\nimport UserList from '../components/UserList';\r\nimport { GitHubUser, searchUsers } from '../services/githubApi';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nconst HomePage: React.FC = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [submittedQuery, setSubmittedQuery] = useState('');\r\n\r\n  // Query untuk mencari user\r\n  const { data: users = [], isLoading, error, refetch } = useQuery<GitHubUser[], Error>({\r\n    queryKey: ['searchUsers', submittedQuery],\r\n    queryFn: () => searchUsers(submittedQuery),\r\n    enabled: false, // non-aktif otomatis, manual refetch\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    setSubmittedQuery(searchQuery.trim());\r\n    await refetch();\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ paddingY: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n        GitHub User Search\r\n      </Typography>\r\n\r\n      <SearchBar searchQuery={searchQuery} onQueryChange={setSearchQuery} />\r\n      <Button variant=\"contained\" onClick={handleSearch} fullWidth>\r\n        Search\r\n      </Button>\r\n\r\n      {isLoading && <CircularProgress sx={{ display: 'block', margin: '20px auto' }} />}\r\n      {error && <Alert severity=\"error\">{error.message}</Alert>}\r\n\r\n      {users.length > 0 && <UserList users={users} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}