{"ast":null,"code":"/**\r\n * Mencari pengguna GitHub berdasarkan query.\r\n * Mengembalikan maksimal 5 user.\r\n */\nexport async function searchUsers(query) {\n  if (!query) return [];\n  const response = await fetch(`https://api.github.com/search/users?q=${encodeURIComponent(query)}&per_page=5`);\n  if (!response.ok) {\n    throw new Error(`Error searching users: ${response.status}`);\n  }\n  const data = await response.json();\n  return data.items;\n}\n\n/**\r\n * Mengambil repository milik pengguna GitHub tertentu.\r\n * Mendukung pagination dengan parameter page dan per_page.\r\n */\nexport async function getUserRepos(username, page = 1, per_page = 10) {\n  const response = await fetch(`https://api.github.com/users/${username}/repos?page=${page}&per_page=${per_page}`);\n  if (!response.ok) {\n    throw new Error(`Error fetching repos for user ${username}: ${response.status}`);\n  }\n  return response.json();\n}","map":{"version":3,"names":["searchUsers","query","response","fetch","encodeURIComponent","ok","Error","status","data","json","items","getUserRepos","username","page","per_page"],"sources":["D:/Noticed/GitHub repositories explorer/github-search/src/services/githubApi.ts"],"sourcesContent":["export interface GitHubUser {\r\n    login: string;\r\n    id: number;\r\n    avatar_url: string;\r\n    // Field lain bisa ditambahkan jika diperlukan\r\n  }\r\n  \r\n  export interface GitHubRepo {\r\n    id: number;\r\n    name: string;\r\n    stargazers_count: number;\r\n    html_url: string;\r\n    // Field lain bisa ditambahkan jika diperlukan\r\n  }\r\n  \r\n  /**\r\n   * Mencari pengguna GitHub berdasarkan query.\r\n   * Mengembalikan maksimal 5 user.\r\n   */\r\n  export async function searchUsers(query: string): Promise<GitHubUser[]> {\r\n    if (!query) return [];\r\n    const response = await fetch(\r\n      `https://api.github.com/search/users?q=${encodeURIComponent(query)}&per_page=5`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(`Error searching users: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.items;\r\n  }\r\n  \r\n  /**\r\n   * Mengambil repository milik pengguna GitHub tertentu.\r\n   * Mendukung pagination dengan parameter page dan per_page.\r\n   */\r\n  export async function getUserRepos(\r\n    username: string,\r\n    page: number = 1,\r\n    per_page: number = 10\r\n  ): Promise<GitHubRepo[]> {\r\n    const response = await fetch(\r\n      `https://api.github.com/users/${username}/repos?page=${page}&per_page=${per_page}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(`Error fetching repos for user ${username}: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  }\r\n  "],"mappings":"AAeE;AACF;AACA;AACA;AACE,OAAO,eAAeA,WAAWA,CAACC,KAAa,EAAyB;EACtE,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yCAAyCC,kBAAkB,CAACH,KAAK,CAAC,aACpE,CAAC;EACD,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0BJ,QAAQ,CAACK,MAAM,EAAE,CAAC;EAC9D;EACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,KAAK;AACnB;;AAEA;AACF;AACA;AACA;AACE,OAAO,eAAeC,YAAYA,CAChCC,QAAgB,EAChBC,IAAY,GAAG,CAAC,EAChBC,QAAgB,GAAG,EAAE,EACE;EACvB,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gCAAgCS,QAAQ,eAAeC,IAAI,aAAaC,QAAQ,EAClF,CAAC;EACD,IAAI,CAACZ,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiCM,QAAQ,KAAKV,QAAQ,CAACK,MAAM,EAAE,CAAC;EAClF;EACA,OAAOL,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}